/// Grid system
//
// Generate semantic grid columns with these mixins.

@mixin make-container() {
  width: 100%;
  margin-right: auto;
  margin-left: auto;
  max-width: 1680px;
}


@mixin make-row($gridcount: $grid-columns, $usecontainerinrow: true, $gutter: $grid-gutter-width) {

  display: -ms-flexbox;
  display: flex;

  -ms-flex-wrap: wrap;
  flex-wrap: wrap;

  @if $usecontainerinrow==false {
    margin-left: -$gutter / 2;
    margin-right: -$gutter / 2;
  }

  @supports(display: grid) {
    display: grid;
    grid-template-columns: repeat($gridcount, 1fr);
    grid-gap: $gutter;

    @if $usecontainerinrow==false {
      margin-left: 0;
      margin-right: 0;
    }
  }
}

@mixin make-col-ready($gutter: $grid-gutter-width) {
  position: relative;
  // Prevent columns from becoming too narrow when at smaller grid tiers by
  // always setting `width: 100%;`. This works because we use `flex` values
  // later on to override this initial width.
  width: 100%;
  padding-right: $gutter / 2;
  padding-left: $gutter / 2;

  @supports(display: grid) {
    padding-left: 0;
    padding-right: 0;
  }


}

@mixin make-col($gridcol, $size, $gridsize: 0, $columns: $grid-columns, $col-max-width: 100%) {
  flex: 0 0 percentage($size / $columns);
  -ms-flex: 0 0 percentage($size / $columns);
  // Add a `max-width` to ensure content within each column does not blow out
  // the width of the column. Applies to IE10+ and Firefox. Chrome and Safari
  // do not appear to require this.
  max-width: percentage($size / $columns);

  @if $gridsize > 0 {
    @supports(display: grid) {
      @if $col-max-width != false {
        max-width: $col-max-width;
      }
      flex: none;
      grid-column: $gridcol / span $gridsize;
    }
  }

}

@mixin make-col-offset($size, $columns: $grid-columns) {
  $num: $size / $columns;
  margin-left: if($num==0, 0, percentage($num));
}

/**
 * Masonry Widths
 *
 * @param $lg - large grid columns to span
 * @param $md - medium grid columns to span
 * @param $sm - small grid columns to span
 * @param $xs - extra-small grid columns to span
 */
@mixin masonry-widths($lg: 4, $md: 4, $sm: 6, $xs: 12) {
    width: get-percentage($xs);
    @include media-breakpoint-up(sm) {
        width: get-percentage($sm);
    }
    @include media-breakpoint-up(md) {
        width: get-percentage($md);
    }
    @if $lg != $md {
        @include media-breakpoint-up(lg) {
            width: get-percentage($lg);
        }
    }
}
